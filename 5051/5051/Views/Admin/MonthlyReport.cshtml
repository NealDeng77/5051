@model _5051.Models.MonthlyReportViewModel
@{
    ViewBag.Title = "Student Reports";
}

<div class="text-center text-light">
    <br />
    <h4>@Model.Student.Name's Monthly Report</h4>
    <h5>@Model.DateStart.ToString("d") to @Model.DateEnd.ToString("d")</h5>
    <ul class="nav nav-pills">
        <li class="nav-item">
            @Html.ActionLink("Weekly", "WeeklyReport", "Admin", new { id = Model.StudentId }, new { @class = "nav-link text-light" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Monthly", "MonthlyReport", "Admin", new { id = Model.StudentId }, new { @class = "nav-link active text-light" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Semester", "SemesterReport", "Admin", new { id = Model.StudentId }, new { @class = "nav-link text-light" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Quarter", "QuarterReport", "Admin", new { id = Model.StudentId }, new { @class = "nav-link text-light" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("School Year", "OverallReport", "Admin", new { id = Model.StudentId }, new { @class = "nav-link text-light" })
        </li>
    </ul>
    <hr>
    <div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.StudentId)
        <div class="row w-100">

            <div class="col-sm-3 text-right mr-auto">
                @*Todo replace hardcoded years*@
                @Html.DropDownListFor(m => m.SelectedMonthId, Model.Months, new { onchange = "this.form.submit();", @class = "form-control" })
            </div>

            <div class="btn btn-primary">
                Download
            </div>
        </div>


        }


    </div>
</div>
<br />

@if (Model.Stats.NumOfSchoolDays == 0)
{
    <h5 class="text-light">No Data of this Month</h5>
}
else
{
    <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
        <li class="nav-item nav-fill">
            <a class="nav-link active text-white" id="pills-home-tab" data-toggle="pill" href="#pills-1" role="tab" aria-controls="pills-1" aria-selected="true">Total Attended Hours Over Time</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" id="pills-profile-tab" data-toggle="pill" href="#pills-2" role="tab" aria-controls="pills-2" aria-selected="false">Attended Hours By Date</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" id="pills-contact-tab" data-toggle="pill" href="#pills-3" role="tab" aria-controls="pills-3" aria-selected="false">Statistics</a>
        </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active card" id="pills-1" role="tabpanel" aria-labelledby="pills-1-tab">
            @Html.Partial("_StudentReportCumulativeLineChartPartial", Model)
        </div>
        <div class="tab-pane fade card" id="pills-2" role="tabpanel" aria-labelledby="pills-2-tab">
            @Html.Partial("_StudentReportCalendarPartial", Model)
        </div>
        <div class="tab-pane fade card" id="pills-3" role="tabpanel" aria-labelledby="pills-3-tab">
            @Html.Partial("_StudentReportTablePartial", Model)
        </div>
    </div>
}




@*<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load("current", { packages: ["calendar"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var dataTable = new google.visualization.DataTable();
            dataTable.addColumn({ type: 'date', id: 'Date' });
            dataTable.addColumn({ type: 'number', id: 'Won/Loss' });
            var dates = [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay).ToList().Select(m => m.Date.ToString("yyyy,MM,dd")).ToArray())];
            var values = [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay).ToList().Select(m => m.HoursAttended.TotalMinutes).ToArray())];

            var year;
            var month;
            var date;
            var i = 0;
            while (i < dates.length) {
                year = dates[i];
                i++;
                month = dates[i];
                i++;
                date = dates[i];
                i++;
                dataTable.addRow([new Date(year, month, date), values[i/3]]);
            }


            var chart = new google.visualization.Calendar(document.getElementById('calendar_basic'));

            var options = {
                title: "Attendance",
                height: 350,
            };

            chart.draw(dataTable, options);
        }
    </script>

    <div id="calendar_basic" style="width: 1000px; height: 350px;"></div>*@

@*<html>
<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['timeline']});
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var container = document.getElementById('timeline');
            var chart = new google.visualization.Timeline(container);
            var dataTable = new google.visualization.DataTable();

            dataTable.addColumn({ type: 'string', id: 'Date' });
            dataTable.addColumn({ type: 'date', id: 'Start' });
            dataTable.addColumn({ type: 'date', id: 'End' });
            var dates = [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay).ToList().Select(m => m.Date.ToString("yyyy,MM,dd")).ToArray())];
            var starts = [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay).ToList().Select(m => m.TimeIn.ToString("HH,mm,ss")).ToArray())];
            var ends = [@String.Join(", ", Model.AttendanceList.Where(m => m.IsSchoolDay).ToList().Select(m => m.TimeOut.ToString("HH,mm,ss")).ToArray())];

            var hourIn;
            var hourOut;
            var minIn;
            var minOut;
            var secIn;
            var secOut;
            var i = 0;
            while (i < starts.length) {
                hourIn = starts[i];
                hourOut = ends[i];
                i++;
                minIn = starts[i];
                minOut = ends[i];
                i++;
                secIn = starts[i];
                secOut = ends[i];
                i++;
                dataTable.addRow([dates[i / 3].toString(), new Date(0, 0, 0, hourIn, minIn, secIn), new Date(0, 0, 0, hourOut, minOut, secOut)]);
            }

            //dataTable.addRows([
            //    [ 'Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],
            //    [ 'Adams',      new Date(1797, 2, 4),  new Date(1801, 2, 4) ],
            //    [ 'Jefferson',  new Date(1801, 2, 4),  new Date(1809, 2, 4) ]]);

            chart.draw(dataTable);
        }
    </script>
</head>
<body>
<div id="timeline" style="height: 180px;"></div>
</body>
</html>*@
<br />
<br />
<br />
<br />
<br />
<br /><br />
<br />
<br /><br />
<br />
<br />
