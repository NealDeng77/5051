@using _5051.Models;
@model _5051.Models.SelectedAvatarForStudentViewModel

@{
    ViewBag.Title = "My Avatar";
}
<div class="row">
    <h2>My Avatar</h2>
    <div class="col-sm-10 col-sm-offset-1">
        <h3>
            @Html.DisplayNameFor(m => m.SelectedAvatar.Level) @Html.DisplayFor(m => m.SelectedAvatar.Level)
        </h3>

        <div class="col-sm-2 text-center">
            <img src="~/Content/img/@Model.SelectedAvatar.Uri" width="75" height="75" />
            <br />
            <div class="text-center">
                @Html.DisplayFor(m => m.SelectedAvatar.Name)
                <br />
                <br />
                <br />
            </div>
        </div>
    </div>
</div>

@{
    if (Model.AvatarList == null | !Model.AvatarList.Any())
    {
        <h2>No Avatars Available to Select</h2>
    }
    else
    {
        <h2>Avatars available to pick per Level.</h2>
        <div class="row">
            <div class="col-sm-10 col-sm-offset-1">
                @{
                    ///Walk the SelectedAvatarViewModel.MaxLevel, and for each level lay out the Level, and the Avatars
                    for (var myList = 1; myList <= Model.MaxLevel; myList++)
                    {
                        <br />
                        <div class="row">
                            @{
                                <h3>Level @myList</h3>

                                AvatarViewModel myAvatarLevelList = Model.AvatarLevelList.Where(m => m.ListLevel == myList).FirstOrDefault();

                                if (myAvatarLevelList == null || myAvatarLevelList.AvatarList == null || !myAvatarLevelList.AvatarList.Any())
                                {
                                    <p>No Avatars at this level</p>
                                }
                                else
                                {
                                    //AvatarViewModel outputAvatar = new AvatarViewModel();
                                    foreach (var outputAvatar in myAvatarLevelList.AvatarList)
                                    {
                                        using (Html.BeginForm())
                                        {
                                            Html.AntiForgeryToken();

                                            //Send up the AvatarId, and the StudentId to associated the Avatar with.
                                            Html.Hidden("AvatarId", outputAvatar.Id);
                                            Html.Hidden("StudentId", Model.Student.Id);
                                            var picturURI = "/Content/img/" + outputAvatar.Uri;

                                            <div class="col-sm-2 text-center">
                                                <input type="image" name="submit" src="@picturURI" border="0" alt="@outputAvatar.Name" width="75" height="75" />
                                                <br />
                                                <span class="text-center">
                                                    @outputAvatar.Name
                                                    <br />
                                                </span>
                                            </div>
                                        }
                                    }
                                }
                            }
                        </div>
                    }
                }
            </div>
        </div>
    }
}

