@model _5051.Models.AttendanceModel
@{
    ViewBag.Title = "Update Attendance";
}

<br />
<div class="row justify-content-center">

    <div class="col-1 "></div>
    <div class="col lightTransparentBox">
        <br />
        <div class="FontSizeLarge text-center">
            <span class="FontSizeLarger FontBold FontColorWhite">
                Update Attendance
            </span>
        </div>
        <br />
    </div>
    <div class="col-1"></div>
</div>

<div class="row">
    <br />
    <br />
</div>


@{
    if (Model == null)
    {
        <div class="row justify-content-center">

            <div class="col-1 "></div>
            <div class="col lightTransparentBox">
                <br />
                <div class="FontSizeLarge text-center">
                    No Attendance
                </div>
                <br />
            </div>
            <div class="col-1"></div>
        </div>
    }
    else
    {
        <div class="row justify-content-around">
            <div class="col-1 "></div>
            <div class="col lightTransparentBox FontSizeMedium text-center">
                <br />
                <br />

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.Hidden("Emotion", @Model.Emotion, new { @id = "EmotionCurrentId" });
                    <div class="row">
                        <div class="col-6 text-right" id="avatarLevelName">
                            @Html.DisplayNameFor(m => m.In)
                        </div>
                        <div class="col-1">
                            &nbsp;:&nbsp;
                        </div>
                        <div class="col text-left" id="avatarLevelValue">
                            @Html.EditorFor(m => m.In)
                            @Html.ValidationMessageFor(m => m.In)
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-6 text-right" id="tokensName">
                            @Html.DisplayNameFor(m => m.Out)
                        </div>
                        <div class="col-1">
                            &nbsp;:&nbsp;
                        </div>
                        <div class="col text-left" id="tokensValue">
                            @Html.EditorFor(m => m.Out)
                            @Html.ValidationMessageFor(m => m.Out)
                        </div>
                    </div>

                    <br />
                    <div class="row">
                        <div class="col-6 text-right" id="tokensName">
                            @Html.DisplayNameFor(m => m.Emotion)
                        </div>
                        <div class="col-1">
                            &nbsp;:&nbsp;
                        </div>
                        <div class="col text-left" id="tokensValue">
                            <div class="row">
                                @{
                                    // list emotion icons
                                    foreach (var emotion in Enum.GetValues(typeof(_5051.Models.EmotionStatusEnum)))
                                    {
                                        var srcData = "/Content/img/Emotion" + emotion + ".png";
                                        var emotionId = emotion + "Id";

                                        <div id="@emotionId" class="col BoxWithHighlightHover">
                                            <img src="@srcData" class="EmotionSize" onclick="UpdateEmotionCurrent('@emotion')" />
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>


                    <br />
                    <hr />
                    <br />

                    <div class="row justify-content-around DispalyBoxWithMargin">
                        <div class="col text-center DispalyBoxWithMargin">
                            @Html.ActionLink("Cancel", "Details", new { id = Model.Id }, new { @class = "btn btn1 btn-light DispalyBoxWithMargin" })
                        </div>

                        <div class="col text-center DispalyBoxWithMargin">
                            <input type="submit" value="Update" class="btn btn1 btn-light DispalyBoxWithMargin">
                        </div>

                    </div>
                    <br />
                }

            </div>

            <div class="col-1"></div>


        </div>
        <br />
        <br />
    }
}

<script>
    function UpdateEmotionCurrent(UserEmotionId) {
        document.getElementById("VeryHappyId").style.opacity = 1.0;
        document.getElementById("HappyId").style.opacity = 1.0;
        document.getElementById("NeutralId").style.opacity = 1.0;
        document.getElementById("SadId").style.opacity = 1.0;
        document.getElementById("VerySadId").style.opacity = 1.0;

        document.getElementById(UserEmotionId + "Id").style.opacity = 0.3;

        $("#EmotionCurrentId").attr("Value", UserEmotionId);
        $("#StudentLoginButton").attr("Disabled", false);
    }
</script>