@model _5051.Models.StudentViewModel

@{
    ViewBag.Title = "Kiosk";
    var TempTime = DateTime.Now.ToString("HH : mm : ss");
}

<br />
<div class="row justify-content-around">
    <div class="col-1 "></div>
    <div class="col lightTransparentBox">
        <br />
        <div class="FontSizeLarge text-center">
            <span class="FontSizeLarger FontBold">
                Click on your Avatar
            </span>
        </div>
        <br />
    </div>
    <div class="col-1"></div>
</div>

<div class="row">
    <br />
</div>

@{
    if (Model.StudentList == null || !Model.StudentList.Any())
    {
        <div class="row justify-content-around">

            <div class="col-1 "></div>
            <div class="col lightTransparentBox">
                <br />
                <div class="FontSizeMedium text-center">
                    No Students in the System
                </div>
                <br />
            </div>
            <div class="col-1"></div>
        </div>
    }
    else
    {
        <div class="row justify-content-around">
            <div class="col-1 "></div>

            <div class="col">
                <div class="row justify-content-around">
                    <div class="col-sm-4 lightTransparentBox">
                        <div class="row justify-content-around">
                            <div class="FontSizeMedium text-center">
                                Logged Out
                            </div>
                        </div>

                        <hr />

                        <div class="row justify-content-around">
                            @{
                                // Logged Out first
                                foreach (var item in Model.StudentList)
                                {
                                    var srcData = "/Content/img/" + item.AvatarUri;
                                    if (item.Status == _5051.Models.StudentStatusEnum.Out)
                                    {
                            <div class="col-2 AvatarBoxNormal">
                                <a id="@item.Id" href="#FullTime" onclick="UpdateCenter('@srcData','@item.Id', '@item.Name','Log In')">
                                    <div class="row justify-content-around">
                                        <div class="col AvatarBoxNormal" id="AvatarBox">
                                            <div class="AvatarCircle"></div>
                                            <img class="AvatarItemBase AvatarHairBack" id="AvatarHairBack" src="@item.AvatarComposite.AvatarHairBackUri" />
                                            <img class="AvatarItemBase AvatarHead" id="AvatarHead" src="@item.AvatarComposite.AvatarHeadUri" />
                                            <img class="AvatarItemBase AvatarShirt" id="AvatarShirt" src="@item.AvatarComposite.AvatarShirtUri" />
                                            <img class="AvatarItemBase AvatarExpression" id="AvatarExpression" src="@item.AvatarComposite.AvatarExpressionUri" />
                                            <img class="AvatarItemBase AvatarCheeks" id="AvatarCheeks" src="@item.AvatarComposite.AvatarCheeksUri" />
                                            <img class="AvatarItemBase AvatarHairFront" id="AvatarHairFront" src="@item.AvatarComposite.AvatarHairFrontUri" />
                                            <img class="AvatarItemBase AvatarAccessory" id="AvatarAccessory" src="@item.AvatarComposite.AvatarAccessoryUri" />
                                        </div>
                                    </div>
                                </a>
                                <div class="row justify-content-around">
                                    <span class="col FontSizeSmall text-center">
                                        @item.Name
                                    </span>
                                </div>
                            </div>
                                    }
                                }
                            }
                        </div>
                        <br />
                        <br />
                    </div>

                    <div class="col-1 ">
                        <br />
                    </div>

                    <div class="col-sm-2 lightTransparentBox BlockKioskIndex">
                        <div class="FontSizeMedium text-center" id="FullTime">@TempTime</div>

                        <hr />

                        <div id="centerblock" style="display:none;">
                            <div class="row">
                                <div class="col"> </div>
                                <div class="col text-center">
                                    <img id="CenterAvatar" src="" class="AvatarSize3 CenterAvatarStyle" />
                                    <br />
                                    <span id="CenterName" class="FontSizeLarge"></span>
                                    <br />
                                    <br />
                                    <div class="row justify-content-around">
                                        @{
                                            // list emotion icons
                                            foreach (var emotion in Enum.GetValues(typeof(_5051.Models.EmotionStatusEnum)))
                                            {
                                                var srcData = "/Content/img/Emotion" + emotion + ".png";
                                                var emotionId = emotion + "Id";

                                                <div id="@emotionId" class="BoxWithHighlightHover">
                                                    <img src="@srcData" class="EmotionSize" onclick="UpdateEmotionCurrent('@emotion')" />
                                                </div>

                                            }
                                        }
                                        <br />
                                        <br />
                                        @{
                                            // Hide or Show the Div based on Login or Logout
                                            // Login Div goes here
                                            <div id="LoginBox" style="display:none;">
                                                @using (Html.BeginForm(
                                                "KioskLogin", "Kiosk",
                                                FormMethod.Post,
                                                new { enctype = "multipart/form-data" }))
                                                {
                                                    @Html.Hidden("EmotionCurrent", 1, new { @id = "EmotionCurrentId" });
                                                    @Html.Hidden("Id", 1, new { @id = "StudentLogInId" });

                                                    <input id="StudentLoginButton" disabled type="submit" name="submit" value="Log In" class="btn btn1 btn-light btn-block" />
                                                }
                                            </div>

                                            // Logout Div goes here
                                            <div id="LogoutBox" style="display:none;">
                                                @using (Html.BeginForm(
                                                "KioskLogout", "Kiosk",
                                                FormMethod.Post,
                                                new { enctype = "multipart/form-data" }))
                                                {
                                                    @Html.Hidden("Id", 1, new { @id = "StudentLogOutId" });

                                                    <input type="submit" name="submit" value="Log Out" class="btn btn1 btn-light btn-block" />
                                                }
                                            </div>
                                        }
                                    </div>
                                    <br />
                                </div>
                                <div class="col"> </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-1 ">
                        <br />
                    </div>

                    <div class="col-sm-4 lightTransparentBox">
                        <div class="FontSizeMedium text-center">
                            Logged In
                        </div>

                        <hr />

                        <div class="row">
                            @{
                                // List out the Logged IN Students, then the Logged Out students
                                // Logged IN first
                                foreach (var item in Model.StudentList)
                                {
                                    if (item.Status == _5051.Models.StudentStatusEnum.In)
                                    {
                                        var srcData = "/Content/img/" + item.AvatarUri;
                                        <div class="col-sm-4 AvatarBlock">
                                            <div class="AvatarOuterBox BoxWithHighlightHover text-center">
                                                <a id="@item.Id">
                                                    <img src="@srcData" class="AvatarSize2" onclick="UpdateCenter('@srcData','@item.Id','@item.Name','Log Out')" />
                                                </a>
                                                <br />
                                                <span class="FontSizeMedium text-center">
                                                    @item.Name
                                                </span>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        </div>
                        <br />
                        <br />
                    </div>
                </div>
            </div>
            <div class="col-1 ">
                <br />
            </div>
        </div>
    }
}

<script>
    //var canvas = document.getElementById("canvas");
    //var ctx = canvas.getContext("2d");
    //var radius = canvas.height / 2;
    //ctx.translate(radius, radius);
    //radius = radius * 0.90
    setInterval(drawClock, 1000);

    function drawClock() {
        //drawFace(ctx, radius);
        //drawNumbers(ctx, radius);
        //drawTime(ctx, radius);
        drawDigital();
        //Output Text Time
    }

    function drawFace(ctx, radius) {
        var grad;
        ctx.beginPath();
        ctx.arc(0, 0, radius, 0, 2 * Math.PI);
        ctx.fillStyle = 'white';
        ctx.fill();
        grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
        grad.addColorStop(0, '#333');
        grad.addColorStop(0.5, 'white');
        grad.addColorStop(1, '#333');
        ctx.strokeStyle = grad;
        ctx.lineWidth = radius * 0.1;
        ctx.stroke();
        ctx.beginPath();
        ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
        ctx.fillStyle = '#333';
        ctx.fill();
    }

    function drawNumbers(ctx, radius) {
        var ang;
        var num;
        ctx.font = radius * 0.15 + "px arial";
        ctx.textBaseline = "middle";
        ctx.textAlign = "center";
        for (num = 1; num < 13; num++) {
            ang = num * Math.PI / 6;
            ctx.rotate(ang);
            ctx.translate(0, -radius * 0.85);
            ctx.rotate(-ang);
            ctx.fillText(num.toString(), 0, 0);
            ctx.rotate(ang);
            ctx.translate(0, radius * 0.85);
            ctx.rotate(-ang);
        }
    }

    function drawTime(ctx, radius) {
        var now = new Date();
        var hour = now.getHours();
        var minute = now.getMinutes();
        var second = now.getSeconds();
        //hour
        hour = hour % 12;
        hour = (hour * Math.PI / 6) +
            (minute * Math.PI / (6 * 60)) +
            (second * Math.PI / (360 * 60));
        drawHand(ctx, hour, radius * 0.5, radius * 0.07);
        //minute
        minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
        drawHand(ctx, minute, radius * 0.8, radius * 0.07);
        // second
        second = (second * Math.PI / 30);
        drawHand(ctx, second, radius * 0.9, radius * 0.02);
    }

    function drawDigital() {
        var now = new Date();
        var hour = now.getHours();
        var minute = now.getMinutes();
        var second = now.getSeconds();

        var d = new Date();

        var month = d.getMonth() + 1;
        var day = d.getDate();

        var fullDate =
            (('' + month).length < 2 ? '0' : '') + month + ' / ' +
            (('' + day).length < 2 ? '0' : '') + day;

        var fullTime =
            (('' + hour).length < 2 ? '0' : '') + hour + ' : ' +
            (('' + minute).length < 2 ? '0' : '') + minute + ' : ' +
            (('' + second).length < 2 ? '0' : '') + second;


        $("#FullDate").text(fullDate);
        $("#FullTime").text(fullTime);
    }


    function drawHand(ctx, pos, length, width) {
        ctx.beginPath();
        ctx.lineWidth = width;
        ctx.lineCap = "round";
        ctx.moveTo(0, 0);
        ctx.rotate(pos);
        ctx.lineTo(0, -length);
        ctx.stroke();
        ctx.rotate(-pos);
    }
</script>
<script>
    function UpdateCenter(path, Id, name, request) {
        var current = document.getElementById("centerblock");
        if (current.style.display == "none") {
            current.style.display = "block";
        }
        $("#CenterAvatar").attr("src", path);
        $("#CenterName").html(name);

        $("#StudentLogInId").attr("Value", Id);
        $("#StudentLogOutId").attr("Value", Id);
        var loginBoxStatus = document.getElementById("LoginBox");
        var logoutBoxStatus = document.getElementById("LogoutBox");
        if (request == "Log In") {
            logoutBoxStatus.style.display = "none";
            loginBoxStatus.style.display = "block";
            //$("#CenterStatus").attr("href", "/kiosk/SetLogIn/" + Id);
            //$("#CenterStatus").html(request);
        }
        else {
            loginBoxStatus.style.display = "none";
            logoutBoxStatus.style.display = "block";
            //$("#CenterStatus").attr("href", "/kiosk/SetLogOut/" + Id);
            //$("#CenterStatus").html(request);
        }
    }
</script>

<script>
    function UpdateEmotionCurrent(UserEmotionId) {
        document.getElementById("VeryHappyId").style.opacity = 1.0;
        document.getElementById("HappyId").style.opacity = 1.0;
        document.getElementById("NeutralId").style.opacity = 1.0;
        document.getElementById("SadId").style.opacity = 1.0;
        document.getElementById("VerySadId").style.opacity = 1.0;

        document.getElementById(UserEmotionId + "Id").style.opacity = 0.3;

        $("#EmotionCurrentId").attr("Value", UserEmotionId);
        $("#StudentLoginButton").attr("Disabled", false);
    }
</script>
